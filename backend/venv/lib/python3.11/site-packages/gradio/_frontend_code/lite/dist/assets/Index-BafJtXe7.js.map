{"version":3,"file":"Index-BafJtXe7.js","sources":["../../../dataframe/shared/EditableCell.svelte","../../../dataframe/shared/VirtualTable.svelte","../../../dataframe/shared/Arrow.svelte","../../../dataframe/shared/CellMenu.svelte","../../../dataframe/shared/Toolbar.svelte","../../../dataframe/shared/Table.svelte","../../../dataframe/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown-code\";\n\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\texport let root: string;\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\n\t\trequestAnimationFrame(() => {\n\t\t\tnode.focus();\n\t\t});\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n\n\tfunction handle_keydown(event: KeyboardEvent): void {\n\t\tif (event.key === \"Enter\") {\n\t\t\tvalue = _value;\n\t\t\tdispatch(\"blur\");\n\t\t}\n\t\tdispatch(\"keydown\", event);\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\trole=\"textbox\"\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\ton:mousedown|stopPropagation\n\t\ton:mouseup|stopPropagation\n\t\ton:click|stopPropagation\n\t\tuse:use_focus\n\t\ton:keydown={handle_keydown}\n\t/>\n{/if}\n\n<span\n\ton:dblclick\n\ttabindex=\"-1\"\n\trole=\"button\"\n\tclass:edit\n\ton:focus|preventDefault\n\tstyle={styling}\n\tclass=\"table-cell-text\"\n\tplaceholder=\" \"\n>\n\t{#if datatype === \"html\"}\n\t\t{@html value}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={value.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t\t{root}\n\t\t/>\n\t{:else}\n\t\t{editable ? value : display_value || value}\n\t{/if}\n</span>\n\n<style>\n\tinput {\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tbottom: var(--size-2);\n\t\tleft: var(--size-2);\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: text;\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\toutline: none;\n\t\tpadding: var(--size-2);\n\t\t-webkit-user-select: text;\n\t\t-moz-user-select: text;\n\t\t-ms-user-select: text;\n\t\tuser-select: text;\n\t\tcursor: text;\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont-weight: var(--weight-bold);\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 20;\n\texport let selected: number | false;\n\tlet height = \"100%\";\n\n\tlet average_height = 30;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport: HTMLTableElement;\n\tlet viewport_height = 200;\n\tlet visible: { index: number; data: any[] }[] = [];\n\tlet viewport_box: DOMRectReadOnly;\n\n\t$: viewport_height = viewport_box?.height || 200;\n\n\tconst is_browser = typeof window !== \"undefined\";\n\tconst raf = is_browser\n\t\t? window.requestAnimationFrame\n\t\t: (cb: (...args: any[]) => void) => cb();\n\n\t$: mounted && raf(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\traf(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = is_browser\n\t\t? sortedItems.slice(start, end).map((data, i) => {\n\t\t\t\treturn { index: i + start, data };\n\t\t\t})\n\t\t: sortedItems\n\t\t\t\t.slice(0, (max_height / sortedItems.length) * average_height + 1)\n\t\t\t\t.map((data, i) => {\n\t\t\t\t\treturn { index: i + start, data };\n\t\t\t\t});\n\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<table\n\t\tclass=\"table\"\n\t\tbind:this={viewport}\n\t\tbind:contentRect={viewport_box}\n\t\ton:scroll={handle_scroll}\n\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px\"\n\t>\n\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t<slot name=\"thead\" />\n\t\t</thead>\n\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t</slot>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</tbody>\n\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t<slot name=\"tfoot\" />\n\t\t</tfoot>\n\t</table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow-y: scroll;\n\t\toverflow-x: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: 100vh;\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\tborder-collapse: separate;\n\t}\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\toverflow: hidden;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let transform: string;\n</script>\n\n<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t<path\n\t\td=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n\t\t{transform}\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport Arrow from \"./Arrow.svelte\";\n\timport type { I18nFormatter } from \"js/utils/src\";\n\n\texport let x: number;\n\texport let y: number;\n\texport let on_add_row_above: () => void;\n\texport let on_add_row_below: () => void;\n\texport let on_add_column_left: () => void;\n\texport let on_add_column_right: () => void;\n\texport let row: number;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\n\texport let i18n: I18nFormatter;\n\tlet menu_element: HTMLDivElement;\n\n\t$: is_header = row === -1;\n\t$: can_add_rows = row_count[1] === \"dynamic\";\n\t$: can_add_columns = col_count[1] === \"dynamic\";\n\n\tonMount(() => {\n\t\tposition_menu();\n\t});\n\n\tfunction position_menu(): void {\n\t\tif (!menu_element) return;\n\n\t\tconst viewport_width = window.innerWidth;\n\t\tconst viewport_height = window.innerHeight;\n\t\tconst menu_rect = menu_element.getBoundingClientRect();\n\n\t\tlet new_x = x - 30;\n\t\tlet new_y = y - 20;\n\n\t\tif (new_x + menu_rect.width > viewport_width) {\n\t\t\tnew_x = x - menu_rect.width + 10;\n\t\t}\n\n\t\tif (new_y + menu_rect.height > viewport_height) {\n\t\t\tnew_y = y - menu_rect.height + 10;\n\t\t}\n\n\t\tmenu_element.style.left = `${new_x}px`;\n\t\tmenu_element.style.top = `${new_y}px`;\n\t}\n</script>\n\n<div bind:this={menu_element} class=\"cell-menu\">\n\t{#if !is_header && can_add_rows}\n\t\t<button on:click={() => on_add_row_above()}>\n\t\t\t<Arrow transform=\"rotate(-90 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_row_above\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_row_below()}>\n\t\t\t<Arrow transform=\"rotate(90 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_row_below\")}\n\t\t</button>\n\t{/if}\n\t{#if can_add_columns}\n\t\t<button on:click={() => on_add_column_left()}>\n\t\t\t<Arrow transform=\"rotate(180 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_column_left\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_column_right()}>\n\t\t\t<Arrow transform=\"rotate(0 12 12)\" />\n\t\t\t{i18n(\"dataframe.add_column_right\")}\n\t\t</button>\n\t{/if}\n</div>\n\n<style>\n\t.cell-menu {\n\t\tposition: fixed;\n\t\tz-index: var(--layer-2);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-1);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tmin-width: 150px;\n\t}\n\n\t.cell-menu button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\tpadding: var(--size-1) var(--size-2);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\ttransition:\n\t\t\tbackground-color 0.2s,\n\t\t\tcolor 0.2s;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t}\n\n\t.cell-menu button:hover {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button :global(svg) {\n\t\tfill: currentColor;\n\t\ttransition: fill 0.2s;\n\t}\n\n\t.cell-menu button:hover :global(svg) {\n\t\tfill: var(--color-accent);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Maximize, Minimize } from \"@gradio/icons\";\n\n\texport let show_fullscreen_button = false;\n\texport let is_fullscreen = false;\n</script>\n\n{#if show_fullscreen_button}\n\t<div class=\"toolbar\">\n\t\t<button class=\"toolbar-button\" on:click>\n\t\t\t{#if is_fullscreen}\n\t\t\t\t<Minimize />\n\t\t\t{:else}\n\t\t\t\t<Maximize />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n{/if}\n\n<style>\n\t.toolbar {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tgap: var(--size-1);\n\t}\n\n\t.toolbar-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: var(--size-6);\n\t\theight: var(--size-6);\n\t\tpadding: var(--size-1);\n\t\tborder: none;\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: transparent;\n\t\tcolor: var(--body-text-color-subdued);\n\t\tcursor: pointer;\n\t\ttransition: all 0.2s;\n\t}\n\n\t.toolbar-button:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.toolbar-button :global(svg) {\n\t\twidth: var(--size-4);\n\t\theight: var(--size-4);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { afterUpdate, createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dsvFormat } from \"d3-dsv\";\n\timport { dequal } from \"dequal/lite\";\n\timport { Upload } from \"@gradio/upload\";\n\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport { type Client } from \"@gradio/client\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type {\n\t\tHeaders,\n\t\tHeadersWithIDs,\n\t\tDataframeValue,\n\t\tDatatype\n\t} from \"./utils\";\n\timport CellMenu from \"./CellMenu.svelte\";\n\timport Toolbar from \"./Toolbar.svelte\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let headers: Headers = [];\n\texport let values: (string | number)[][] = [];\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let max_height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let show_row_numbers = false;\n\texport let upload: Client[\"upload\"];\n\texport let stream_handler: Client[\"stream\"];\n\texport let show_fullscreen_button = false;\n\texport let value_is_output = false;\n\n\tlet selected: false | [number, number] = false;\n\tlet clicked_cell: { row: number; col: number } | undefined = undefined;\n\texport let display_value: string[][] | null = null;\n\texport let styling: string[][] | null = null;\n\tlet t_rect: DOMRectReadOnly;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DataframeValue;\n\t\tinput: undefined;\n\t\tselect: SelectData;\n\t}>();\n\n\tlet editing: false | [number, number] = false;\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\n\tlet last_selected: [number, number] | null = null;\n\n\t$: {\n\t\tif (selected !== false && !dequal(selected, last_selected)) {\n\t\t\tconst [row, col] = selected;\n\t\t\tif (!isNaN(row) && !isNaN(col) && data[row]) {\n\t\t\t\tdispatch(\"select\", {\n\t\t\t\t\tindex: [row, col],\n\t\t\t\t\tvalue: get_data_at(row, col),\n\t\t\t\t\trow_value: data[row].map((d) => d.value)\n\t\t\t\t});\n\t\t\t\tlast_selected = selected;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\n\tfunction make_headers(_head: Headers): HeadersWithIDs {\n\t\tlet _h = _head || [];\n\t\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t\t_h = _h.concat(fill);\n\t\t}\n\n\t\tif (!_h || _h.length === 0) {\n\t\t\treturn Array(col_count[0])\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t\t});\n\t\t}\n\n\t\treturn _h.map((h, i) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\treturn { id: _id, value: h ?? \"\" };\n\t\t});\n\t}\n\n\tfunction process_data(_values: (string | number)[][]): {\n\t\tvalue: string | number;\n\t\tid: string;\n\t}[][] {\n\t\tconst data_row_length = _values.length;\n\t\treturn Array(\n\t\t\trow_count[1] === \"fixed\"\n\t\t\t\t? row_count[0]\n\t\t\t\t: data_row_length < row_count[0]\n\t\t\t\t\t? row_count[0]\n\t\t\t\t\t: data_row_length\n\t\t)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) =>\n\t\t\t\tArray(\n\t\t\t\t\tcol_count[1] === \"fixed\"\n\t\t\t\t\t\t? col_count[0]\n\t\t\t\t\t\t: data_row_length > 0\n\t\t\t\t\t\t\t? _values[0].length\n\t\t\t\t\t\t\t: headers.length\n\t\t\t\t)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, j) => {\n\t\t\t\t\t\tconst id = make_id();\n\t\t\t\t\t\tels[id] = els[id] || { input: null, cell: null };\n\t\t\t\t\t\tconst obj = { value: _values?.[i]?.[j] ?? \"\", id };\n\t\t\t\t\t\tdata_binding[id] = obj;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t})\n\t\t\t);\n\t}\n\n\tlet _headers = make_headers(headers);\n\tlet old_headers: string[] = headers;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\t_headers = make_headers(headers);\n\t\t\told_headers = JSON.parse(JSON.stringify(headers));\n\t\t}\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\n\t$: if (!dequal(values, old_val)) {\n\t\tdata = process_data(values as (string | number)[][]);\n\t\told_val = JSON.parse(JSON.stringify(values)) as (string | number)[][];\n\t}\n\n\tlet previous_headers = _headers.map((h) => h.value);\n\tlet previous_data = data.map((row) => row.map((cell) => String(cell.value)));\n\n\tasync function trigger_change(): Promise<void> {\n\t\tconst current_headers = _headers.map((h) => h.value);\n\t\tconst current_data = data.map((row) =>\n\t\t\trow.map((cell) => String(cell.value))\n\t\t);\n\n\t\tif (\n\t\t\t!dequal(current_data, previous_data) ||\n\t\t\t!dequal(current_headers, previous_headers)\n\t\t) {\n\t\t\t// We dispatch the value as part of the change event to ensure that the value is updated\n\t\t\t// in the parent component and the updated value is passed into the user's function\n\t\t\tdispatch(\"change\", {\n\t\t\t\tdata: data.map((row) => row.map((cell) => cell.value)),\n\t\t\t\theaders: _headers.map((h) => h.value),\n\t\t\t\tmetadata: null\n\t\t\t});\n\t\t\tif (!value_is_output) {\n\t\t\t\tdispatch(\"input\");\n\t\t\t}\n\t\t\tprevious_data = current_data;\n\t\t\tprevious_headers = current_headers;\n\t\t}\n\t}\n\n\tfunction get_sort_status(\n\t\tname: string,\n\t\t_sort?: number,\n\t\tdirection?: SortDirection\n\t): \"none\" | \"ascending\" | \"descending\" {\n\t\tif (!_sort) return \"none\";\n\t\tif (headers[_sort] === name) {\n\t\t\tif (direction === \"asc\") return \"ascending\";\n\t\t\tif (direction === \"des\") return \"descending\";\n\t\t}\n\n\t\treturn \"none\";\n\t}\n\n\tfunction get_current_indices(id: string): [number, number] {\n\t\treturn data.reduce(\n\t\t\t(acc, arr, i) => {\n\t\t\t\tconst j = arr.reduce(\n\t\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t\t-1\n\t\t\t\t);\n\n\t\t\t\treturn j === -1 ? acc : [i, j];\n\t\t\t},\n\t\t\t[-1, -1]\n\t\t);\n\t}\n\n\tfunction move_cursor(\n\t\tkey: \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\",\n\t\tcurrent_coords: [number, number]\n\t): void {\n\t\tconst dir = {\n\t\t\tArrowRight: [0, 1],\n\t\t\tArrowLeft: [0, -1],\n\t\t\tArrowDown: [1, 0],\n\t\t\tArrowUp: [-1, 0]\n\t\t}[key];\n\n\t\tconst i = current_coords[0] + dir[0];\n\t\tconst j = current_coords[1] + dir[1];\n\n\t\tif (i < 0 && j <= 0) {\n\t\t\tselected_header = j;\n\t\t\tselected = false;\n\t\t} else {\n\t\t\tconst is_data = data[i]?.[j];\n\t\t\tselected = is_data ? [i, j] : selected;\n\t\t}\n\t}\n\n\tlet clear_on_focus = false;\n\t// eslint-disable-next-line complexity\n\tasync function handle_keydown(event: KeyboardEvent): Promise<void> {\n\t\tif (selected_header !== false && header_edit === false) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tselected = [0, selected_header];\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header > 0 ? selected_header - 1 : selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header < _headers.length - 1\n\t\t\t\t\t\t\t? selected_header + 1\n\t\t\t\t\t\t\t: selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Enter\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!selected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [i, j] = selected;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowRight\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tif (editing) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tmove_cursor(event.key, [i, j]);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Escape\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tadd_row(i);\n\t\t\t\t\tawait tick();\n\n\t\t\t\t\tselected = [i + 1, j];\n\t\t\t\t} else {\n\t\t\t\t\tif (dequal(editing, [i, j])) {\n\t\t\t\t\t\tconst cell_id = data[i][j].id;\n\t\t\t\t\t\tconst input_el = els[cell_id].input;\n\t\t\t\t\t\tif (input_el) {\n\t\t\t\t\t\t\tdata[i][j].value = input_el.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tselected = [i, j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tediting = [i, j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Delete\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Tab\":\n\t\t\t\tlet direction = event.shiftKey ? -1 : 1;\n\n\t\t\t\tlet is_data_x = data[i][j + direction];\n\t\t\t\tlet is_data_y =\n\t\t\t\t\tdata?.[i + direction]?.[direction > 0 ? 0 : _headers.length - 1];\n\n\t\t\t\tif (is_data_x || is_data_y) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected = is_data_x\n\t\t\t\t\t\t? [i, j + direction]\n\t\t\t\t\t\t: [i + direction, direction > 0 ? 0 : _headers.length - 1];\n\t\t\t\t}\n\t\t\t\tediting = false;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (\n\t\t\t\t\t(!editing || (editing && dequal(editing, [i, j]))) &&\n\t\t\t\t\tevent.key.length === 1\n\t\t\t\t) {\n\t\t\t\t\tclear_on_focus = true;\n\t\t\t\t\tediting = [i, j];\n\t\t\t\t}\n\t\t}\n\t}\n\n\ttype SortDirection = \"asc\" | \"des\";\n\tlet sort_direction: SortDirection | undefined;\n\tlet sort_by: number | undefined;\n\n\tfunction handle_sort(col: number): void {\n\t\tif (typeof sort_by !== \"number\" || sort_by !== col) {\n\t\t\tsort_direction = \"asc\";\n\t\t\tsort_by = col;\n\t\t} else {\n\t\t\tif (sort_direction === \"asc\") {\n\t\t\t\tsort_direction = \"des\";\n\t\t\t} else if (sort_direction === \"des\") {\n\t\t\t\tsort_direction = \"asc\";\n\t\t\t}\n\t\t}\n\t}\n\n\tlet header_edit: number | false;\n\n\tlet select_on_focus = false;\n\tlet selected_header: number | false = false;\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tselected = false;\n\t\tselected_header = i;\n\t\theader_edit = i;\n\t\tselect_on_focus = _select;\n\t}\n\n\tfunction end_header_edit(event: CustomEvent<KeyboardEvent>): void {\n\t\tif (!editable) return;\n\n\t\tswitch (event.detail.key) {\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Enter\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tselected = false;\n\t\t\t\tselected_header = header_edit;\n\t\t\t\theader_edit = false;\n\t\t\t\tparent.focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length === 0) {\n\t\t\tvalues = [Array(headers.length).fill(\"\")];\n\t\t\treturn;\n\t\t}\n\n\t\tconst new_row = Array(data[0].length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t});\n\n\t\tif (index !== undefined && index >= 0 && index <= data.length) {\n\t\t\tdata.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tdata.push(new_row);\n\t\t}\n\n\t\tdata = data;\n\t\tselected = [index !== undefined ? index : data.length - 1, 0];\n\t}\n\n\t$: (data || _headers) && trigger_change();\n\n\tasync function add_col(index?: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\n\t\tconst insert_index = index !== undefined ? index : data[0].length;\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata[i].splice(insert_index, 0, { id: _id, value: \"\" });\n\t\t}\n\n\t\theaders.splice(insert_index, 0, `Header ${headers.length + 1}`);\n\n\t\tdata = data;\n\t\theaders = headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(insert_index, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tif (\n\t\t\t(active_cell_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\")) ||\n\t\t\t(active_header_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\"))\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t\tactive_header_menu = null;\n\t\t}\n\n\t\tconst [trigger] = event.composedPath() as HTMLElement[];\n\t\tif (parent.contains(trigger)) {\n\t\t\treturn;\n\t\t}\n\n\t\tclicked_cell = undefined;\n\t\tediting = false;\n\t\tselected = false;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction guess_delimitaor(\n\t\ttext: string,\n\t\tpossibleDelimiters: string[]\n\t): string[] {\n\t\treturn possibleDelimiters.filter(weedOut);\n\n\t\tfunction weedOut(delimiter: string): boolean {\n\t\t\tvar cache = -1;\n\t\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\t\tfunction checkLength(line: string): boolean {\n\t\t\t\tif (!line) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar length = line.split(delimiter).length;\n\t\t\t\tif (cache < 0) {\n\t\t\t\t\tcache = length;\n\t\t\t\t}\n\t\t\t\treturn cache === length && length > 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction data_uri_to_blob(data_uri: string): Blob {\n\t\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\t\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n\t\tconst ab = new ArrayBuffer(byte_str.length);\n\t\tconst ia = new Uint8Array(ab);\n\n\t\tfor (let i = 0; i < byte_str.length; i++) {\n\t\t\tia[i] = byte_str.charCodeAt(i);\n\t\t}\n\n\t\treturn new Blob([ab], { type: mime_str });\n\t}\n\n\tfunction blob_to_string(blob: Blob): void {\n\t\tconst reader = new FileReader();\n\n\t\tfunction handle_read(e: ProgressEvent<FileReader>): void {\n\t\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\n\t\t\tconst [delimiter] = guess_delimitaor(e.target.result, [\",\", \"\\t\"]);\n\n\t\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\n\t\t\t_headers = make_headers(\n\t\t\t\tcol_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head\n\t\t\t);\n\n\t\t\tvalues = rest;\n\t\t\treader.removeEventListener(\"loadend\", handle_read);\n\t\t}\n\n\t\treader.addEventListener(\"loadend\", handle_read);\n\n\t\treader.readAsText(blob);\n\t}\n\n\tlet dragging = false;\n\n\tfunction get_max(\n\t\t_d: { value: any; id: string }[][]\n\t): { value: any; id: string }[] {\n\t\tif (!_d || _d.length === 0 || !_d[0]) return [];\n\t\tlet max = _d[0].slice();\n\t\tfor (let i = 0; i < _d.length; i++) {\n\t\t\tfor (let j = 0; j < _d[i].length; j++) {\n\t\t\t\tif (`${max[j].value}`.length < `${_d[i][j].value}`.length) {\n\t\t\t\t\tmax[j] = _d[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\t$: max = get_max(data);\n\n\t$: cells[0] && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\n\tfunction set_cell_widths(): void {\n\t\tconst widths = cells.map((el, i) => {\n\t\t\treturn el?.clientWidth || 0;\n\t\t});\n\t\tif (widths.length === 0) return;\n\t\tfor (let i = 0; i < widths.length; i++) {\n\t\t\tparent.style.setProperty(\n\t\t\t\t`--cell-width-${i}`,\n\t\t\t\t`${widths[i] - scrollbar_width / widths.length}px`\n\t\t\t);\n\t\t}\n\t}\n\n\tlet table_height: number =\n\t\tvalues.slice(0, (max_height / values.length) * 37).length * 37 + 37;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null,\n\t\tcol?: number,\n\t\tdir?: SortDirection\n\t): void {\n\t\tlet id = null;\n\t\t//Checks if the selected cell is still in the data\n\t\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\t\tid = data[selected[0]][selected[1]].id;\n\t\t}\n\t\tif (typeof col !== \"number\" || !dir) {\n\t\t\treturn;\n\t\t}\n\t\tconst indices = [...Array(_data.length).keys()];\n\n\t\tif (dir === \"asc\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value < _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else if (dir === \"des\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value > _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// sort all the data and metadata based on the values in the data\n\t\tconst temp_data = [..._data];\n\t\tconst temp_display_value = _display_value ? [..._display_value] : null;\n\t\tconst temp_styling = _styling ? [..._styling] : null;\n\t\tindices.forEach((originalIndex, sortedIndex) => {\n\t\t\t_data[sortedIndex] = temp_data[originalIndex];\n\t\t\tif (_display_value && temp_display_value)\n\t\t\t\t_display_value[sortedIndex] = temp_display_value[originalIndex];\n\t\t\tif (_styling && temp_styling)\n\t\t\t\t_styling[sortedIndex] = temp_styling[originalIndex];\n\t\t});\n\n\t\tdata = data;\n\n\t\tif (id) {\n\t\t\tconst [i, j] = get_current_indices(id);\n\t\t\tselected = [i, j];\n\t\t}\n\t}\n\n\t$: sort_data(data, display_value, styling, sort_by, sort_direction);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\n\t\tdocument.addEventListener(\"click\", handle_click_outside);\n\t\twindow.addEventListener(\"resize\", handle_resize);\n\t\tdocument.addEventListener(\"fullscreenchange\", handle_fullscreen_change);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t\tdocument.removeEventListener(\"click\", handle_click_outside);\n\t\t\twindow.removeEventListener(\"resize\", handle_resize);\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"fullscreenchange\",\n\t\t\t\thandle_fullscreen_change\n\t\t\t);\n\t\t};\n\t});\n\n\tlet highlighted_column: number | null = null;\n\n\tlet active_cell_menu: {\n\t\trow: number;\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tfunction toggle_cell_menu(event: MouseEvent, row: number, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tactive_cell_menu &&\n\t\t\tactive_cell_menu.row === row &&\n\t\t\tactive_cell_menu.col === col\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t} else {\n\t\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\t\tif (cell) {\n\t\t\t\tconst rect = cell.getBoundingClientRect();\n\t\t\t\tactive_cell_menu = {\n\t\t\t\t\trow,\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction add_row_at(index: number, position: \"above\" | \"below\"): void {\n\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\tadd_row(row_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction add_col_at(index: number, position: \"left\" | \"right\"): void {\n\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\tadd_col(col_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction handle_resize(): void {\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t\tset_cell_widths();\n\t}\n\n\tlet active_button: {\n\t\ttype: \"header\" | \"cell\";\n\t\trow?: number;\n\t\tcol: number;\n\t} | null = null;\n\n\tfunction toggle_header_button(col: number): void {\n\t\tif (active_button?.type === \"header\" && active_button.col === col) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"header\", col };\n\t\t}\n\t}\n\n\tfunction toggle_cell_button(row: number, col: number): void {\n\t\tif (\n\t\t\tactive_button?.type === \"cell\" &&\n\t\t\tactive_button.row === row &&\n\t\t\tactive_button.col === col\n\t\t) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"cell\", row, col };\n\t\t}\n\t}\n\n\tlet active_header_menu: {\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tlet is_fullscreen = false;\n\n\tfunction toggle_fullscreen(): void {\n\t\tif (!document.fullscreenElement) {\n\t\t\tparent.requestFullscreen();\n\t\t\tis_fullscreen = true;\n\t\t} else {\n\t\t\tdocument.exitFullscreen();\n\t\t\tis_fullscreen = false;\n\t\t}\n\t}\n\n\tfunction handle_fullscreen_change(): void {\n\t\tis_fullscreen = !!document.fullscreenElement;\n\t}\n\n\tfunction toggle_header_menu(event: MouseEvent, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (active_header_menu && active_header_menu.col === col) {\n\t\t\tactive_header_menu = null;\n\t\t} else {\n\t\t\tconst header = (event.target as HTMLElement).closest(\"th\");\n\t\t\tif (header) {\n\t\t\t\tconst rect = header.getBoundingClientRect();\n\t\t\t\tactive_header_menu = {\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n</script>\n\n<svelte:window on:resize={() => set_cell_widths()} />\n\n<div class=\"table-container\">\n\t<div class=\"header-row\">\n\t\t{#if label && label.length !== 0 && show_label}\n\t\t\t<div class=\"label\">\n\t\t\t\t<p>{label}</p>\n\t\t\t</div>\n\t\t{/if}\n\t\t<Toolbar\n\t\t\t{show_fullscreen_button}\n\t\t\t{is_fullscreen}\n\t\t\ton:click={toggle_fullscreen}\n\t\t/>\n\t</div>\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px\"\n\t\ton:keydown={(e) => handle_keydown(e)}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table\n\t\t\tbind:contentRect={t_rect}\n\t\t\tbind:this={table}\n\t\t\tclass:fixed-layout={column_widths.length != 0}\n\t\t>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:editing={header_edit === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle:width={column_widths.length ? column_widths[i] : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={(e) => blob_to_string(data_uri_to_blob(e.detail.data))}\n\t\t\tbind:dragging\n\t\t>\n\t\t\t<VirtualTable\n\t\t\t\tbind:items={data}\n\t\t\t\t{max_height}\n\t\t\t\tbind:actual_height={table_height}\n\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\tselected={selected_index}\n\t\t\t>\n\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t{/if}\n\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:focus={header_edit === i || selected_header === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle=\"width: var(--cell-width-{i});\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\ttoggle_header_button(i);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<div class=\"header-content\">\n\t\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\t\t\t\t\t\ton:keydown={end_header_edit}\n\t\t\t\t\t\t\t\t\t\ton:dblclick={() => edit_header(i)}\n\t\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction}\"\n\t\t\t\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\thandle_sort(i);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_header_menu(event, i)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\n\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row_odd={index % 2 === 0}>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<td class=\"row-number\" title={`Row ${index + 1}`}>{index + 1}</td>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\ton:touchstart={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\tclicked_cell = { row: index, col: j };\n\t\t\t\t\t\t\t\tselected = [index, j];\n\t\t\t\t\t\t\t\tselected_header = false;\n\t\t\t\t\t\t\t\theader_edit = false;\n\t\t\t\t\t\t\t\tif (editable) {\n\t\t\t\t\t\t\t\t\tediting = [index, j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggle_cell_button(index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:mousedown={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\tactive_cell_menu = null;\n\t\t\t\t\t\t\t\tactive_header_menu = null;\n\t\t\t\t\t\t\t\tclicked_cell = { row: index, col: j };\n\t\t\t\t\t\t\t\tselected = [index, j];\n\t\t\t\t\t\t\t\tselected_header = false;\n\t\t\t\t\t\t\t\theader_edit = false;\n\t\t\t\t\t\t\t\tif (editable) {\n\t\t\t\t\t\t\t\t\tediting = [index, j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggle_cell_button(index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle:width=\"var(--cell-width-{j})\"\n\t\t\t\t\t\t\tstyle={styling?.[index]?.[j] || \"\"}\n\t\t\t\t\t\t\tclass:focus={dequal(selected, [index, j])}\n\t\t\t\t\t\t\tclass:menu-active={active_cell_menu &&\n\t\t\t\t\t\t\t\tactive_cell_menu.row === index &&\n\t\t\t\t\t\t\t\tactive_cell_menu.col === j}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={data[index][j].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\tdisplay_value={display_value?.[index]?.[j]}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\tedit={dequal(editing, [index, j])}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\ton:blur={() => {\n\t\t\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\t\t\tparent.focus();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_cell_menu(event, index, j)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</VirtualTable>\n\t\t</Upload>\n\t</div>\n</div>\n\n{#if active_cell_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_cell_menu.x}\n\t\ty={active_cell_menu.y}\n\t\trow={active_cell_menu?.row ?? -1}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_cell_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() => add_col_at(active_cell_menu?.col ?? -1, \"right\")}\n\t/>\n{/if}\n\n{#if active_header_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_header_menu.x}\n\t\ty={active_header_menu.y}\n\t\trow={-1}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_header_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() =>\n\t\t\tadd_col_at(active_header_menu?.col ?? -1, \"right\")}\n\t/>\n{/if}\n\n<style>\n\t.button-wrap:hover svg {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.button-wrap svg {\n\t\tmargin-right: var(--size-1);\n\t\tmargin-left: -5px;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin-bottom: var(--size-2);\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t\tbackground-color: none;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\ttable.fixed-layout {\n\t\ttable-layout: fixed;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n\n\ttr > * + * {\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth,\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t}\n\n\tth.focus,\n\ttd.focus {\n\t\t--ring-color: var(--color-accent);\n\t}\n\n\ttr:last-child td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\ttr:last-child td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\ttr th {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tth svg {\n\t\tfill: currentColor;\n\t\tfont-size: 10px;\n\t}\n\n\t.sort-button {\n\t\tdisplay: flex;\n\t\tflex: none;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 150ms;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tcolor: var(--body-text-color-subdued);\n\t\tline-height: var(--text-sm);\n\t}\n\n\t.sort-button:hover {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.des {\n\t\ttransform: scaleY(-1);\n\t}\n\n\t.sort-button.sorted {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.editing {\n\t\tbackground: var(--table-editing);\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toutline: none;\n\t\theight: var(--size-full);\n\t\tmin-height: var(--size-9);\n\t\toverflow: hidden;\n\t}\n\n\t.header-content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t\tmin-width: 0;\n\t}\n\n\t.controls-wrap {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tpadding-top: var(--size-2);\n\t}\n\n\t.row_odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.row_odd.focus {\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\ttable {\n\t\tborder-collapse: separate;\n\t}\n\n\t.cell-menu-button {\n\t\tflex-shrink: 0;\n\t\tdisplay: none;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--block-radius);\n\t\twidth: var(--size-5);\n\t\theight: var(--size-5);\n\t\tmin-width: var(--size-5);\n\t\tpadding: 0;\n\t\tmargin-right: var(--spacing-sm);\n\t\tz-index: var(--layer-1);\n\t}\n\n\t.cell-menu-button:hover {\n\t\tbackground-color: var(--color-bg-hover);\n\t}\n\n\ttd.focus .cell-menu-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\tth .header-content {\n\t\twhite-space: normal;\n\t\toverflow-wrap: break-word;\n\t\tword-break: break-word;\n\t}\n\n\t.table-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-2);\n\t}\n\n\t.row-number,\n\t.row-number-header {\n\t\twidth: var(--size-7);\n\t\tmin-width: var(--size-7);\n\t\ttext-align: center;\n\t\tbackground: var(--table-even-background-fill);\n\t\tposition: sticky;\n\t\tleft: 0;\n\t\tfont-size: var(--input-text-size);\n\t\tcolor: var(--body-text-color);\n\t\tpadding: var(--size-1) var(--size-2);\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t\tfont-weight: var(--weight-semibold);\n\t}\n\n\t.row-number-header {\n\t\tz-index: var(--layer-2);\n\t}\n\n\t.row-number {\n\t\tz-index: var(--layer-1);\n\t}\n\n\t:global(tbody > tr:nth-child(odd)) .row-number {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.header-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\theight: var(--size-6);\n\t\tmin-height: var(--size-6);\n\t}\n\n\t.label {\n\t\tflex: 1;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin: 0;\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Datatype, DataframeValue } from \"./shared/utils\";\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: DataframeValue = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let max_height: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\texport let show_fullscreen_button = false;\n\n\t$: _headers = [...(value.headers || headers)];\n\t$: cell_values = value.data ? [...value.data] : [];\n\t$: display_value = value?.metadata?.display_value\n\t\t? [...value?.metadata?.display_value]\n\t\t: null;\n\t$: styling =\n\t\t!interactive && value?.metadata?.styling\n\t\t\t? [...value?.metadata?.styling]\n\t\t\t: null;\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{show_label}\n\t\t{row_count}\n\t\t{col_count}\n\t\tvalues={cell_values}\n\t\t{display_value}\n\t\t{styling}\n\t\theaders={_headers}\n\t\ton:change={(e) => {\n\t\t\tvalue = e.detail;\n\t\t\tgradio.dispatch(\"change\");\n\t\t}}\n\t\ton:input={(e) => gradio.dispatch(\"input\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{max_height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t\tupload={(...args) => gradio.client.upload(...args)}\n\t\tstream_handler={(...args) => gradio.client.stream(...args)}\n\t\tbind:value_is_output\n\t\t{show_fullscreen_button}\n\t/>\n</Block>\n"],"names":["insert","target","input","anchor","ctx","set_data","t_value","dirty","markdowncode_changes","create_if_block_2","span","edit","$$props","value","display_value","styling","header","datatype","latex_delimiters","clear_on_focus","line_breaks","editable","root","dispatch","createEventDispatcher","el","use_focus","node","_value","handle_blur","currentTarget","$$invalidate","handle_keydown","event","$$value","get_key","i","create_if_block","height","svelte_virtual_table_viewport","append","table","thead","tbody","tfoot","get_computed_px_amount","elem","property","compStyle","items","max_height","actual_height","table_scrollbar_width","start","end","selected","average_height","bottom","contents","head_height","foot_height","height_map","mounted","rows","top","viewport","viewport_height","visible","viewport_box","is_browser","raf","cb","content_height","refresh_height_map","_items","scrollTop","row","tick","_h","row_height","remaining","scrollbar_height","filtered_height_map","v","a","b","scroll_and_render","n","direction","is_in_view","scroll_to_index","current","viewport_top","handle_scroll","e","scroll_top","is_start_overflow","sortedItems","row_top_border","actual_border_collapsed_width","new_start","y","row_heights","remaining_height","index","opts","align_end","_itemHeight","distance","_opts","onMount","ResizeObserverSingleton","data","svg","path","transform","t1_value","t4_value","button0","button1","t1","t4","if_block0","create_if_block_1","div","x","on_add_row_above","on_add_row_below","on_add_column_left","on_add_column_right","col_count","row_count","i18n","menu_element","position_menu","viewport_width","menu_rect","new_x","new_y","is_header","can_add_rows","can_add_columns","button","show_fullscreen_button","is_fullscreen","p","caption","th","toggle_class","div0","attr","th_aria_sort_value","set_style","div1","td","if_block","create_if_block_6","create_if_block_4","editablecell_changes","create_if_block_5","tr","td_title_value","t","dequal","editablecell_props","td_style_value","style_changed","create_if_block_3","cellmenu_changes","create_if_block_9","if_block1","create_if_block_8","create_if_block_7","if_block3","if_block4","div2","table_1","tr0","tr1","make_id","guess_delimitaor","text","possibleDelimiters","weedOut","delimiter","cache","checkLength","line","length","data_uri_to_blob","data_uri","byte_str","mime_str","ab","ia","get_max","_d","max","j","label","show_label","headers","values","wrap","column_widths","show_row_numbers","upload","stream_handler","value_is_output","clicked_cell","t_rect","editing","get_data_at","col","last_selected","els","make_headers","_head","fill","_","_id","h","process_data","_values","data_row_length","id","_headers","old_headers","old_val","previous_headers","previous_data","cell","trigger_change","current_headers","current_data","get_sort_status","name","_sort","get_current_indices","acc","arr","_acc","_data","k","move_cursor","key","current_coords","dir","selected_header","is_data","header_edit","add_row","cell_id","input_el","is_data_x","is_data_y","sort_direction","sort_by","handle_sort","edit_header","_select","end_header_edit","parent","new_row","add_col","insert_index","new_w","handle_click_outside","active_cell_menu","active_header_menu","trigger","blob_to_string","blob","reader","handle_read","head","rest","dsvFormat","dragging","cells","set_cell_widths","widths","scrollbar_width","table_height","sort_data","_display_value","_styling","indices","temp_data","temp_display_value","temp_styling","originalIndex","sortedIndex","is_visible","observer","entries","entry","handle_resize","handle_fullscreen_change","toggle_cell_menu","rect","add_row_at","position","row_index","add_col_at","col_index","active_button","toggle_header_button","toggle_cell_button","toggle_fullscreen","toggle_header_menu","afterUpdate","$$self","click_handler","dblclick_handler","click_handler_3","func","func_1","func_2","func_3","func_4","func_5","func_6","func_7","d","selected_index","table_changes","elem_id","elem_classes","scale","min_width","gradio","loading_status","interactive","clear_status_handler","args","input_handler","cell_values"],"mappings":"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"}